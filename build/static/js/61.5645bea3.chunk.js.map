{"version":3,"sources":["views/apps/astrochat/LiveChatAppMassage.js","views/apps/astrochat/LiveChat.js","views/apps/astrochat/YourliveStream.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["ChatAppMassage","props","state","console","log","this","roomChatData","length","map","chat","index","type","class","msg","className","Row","Col","lg","style","borderRadius","width","height","src","userid","userimg","fullname","reverse","React","Component","ChatApp","handleliveChat","setInterval","localStorage","getItem","axiosConfig","get","then","res","data","setState","catch","err","componentDidMount","countRef","createRef","apicall","callmsg","Index","sendbutton","Activeastro","CurrentRoomid","userId","astroId","roomId","alt","LiveChatAppMassage","YourliveStream","useState","videoCall","setVideoCall","liveid","setliveId","channelNamecreated","setchannelName","Status","setStatus","Token","setToken","Addcall","livestraming","setlivestraming","param","useParams","id","rtcProps","appId","channel","enableVideo","token","uid","role","useEffect","handlePopstate","window","history","pushState","location","pathname","addEventListener","removeEventListener","callbacks","EndCall","response","Card","md","sm","Button","onClick","e","preventDefault","post","astroAccount","status","_id","setItem","channelName","removeItem","handlestatus","color","FormGroup","check","Input","value","target","name","Label","liveidnew","close","handleofflinestreaming","display","border","marginLeft","LiveChat","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","children","node","hidden","for","tag","tagPropType","cssModule","object","xs","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","mapToCssModules","classNames","classes","createElement","_extends","row","inline","disabled"],"mappings":"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","file":"static/js/61.5645bea3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../../assets/scss/pages/astrochat.scss\";\r\nimport { Col, Row } from \"reactstrap\";\r\n\r\nclass ChatAppMassage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    console.log(\"props value\", this.props.roomChatData);\r\n    return (\r\n      <>\r\n        {this.props.roomChatData.length\r\n          ? this.props.roomChatData\r\n              .map((chat, index) => {\r\n                return (\r\n                  <>\r\n                    {chat.type === \"user\" ? (\r\n                      <div class=\"message me\">\r\n                        <div class=\"message-body\">{chat.msg}</div>\r\n                      </div>\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"message\">\r\n                          <div class=\"message-body\">\r\n                            <Row>\r\n                              <Col lg=\"4\">\r\n                                <img\r\n                                  style={{ borderRadius: \"50%\" }}\r\n                                  width=\"40px\"\r\n                                  height=\"40px\"\r\n                                  src={chat?.userid?.userimg[0]}\r\n                                />\r\n                              </Col>\r\n                              <Col lg=\"8\">\r\n                                <Row>\r\n                                  <h6 className=\"container\">\r\n                                    <b> {chat?.userid?.fullname}</b>\r\n                                  </h6>\r\n                                </Row>\r\n                                <Row>\r\n                                  <h6 className=\"container\">{chat.msg}</h6>\r\n                                </Row>\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                );\r\n              })\r\n              .reverse()\r\n          : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatAppMassage;\r\n","import React from \"react\";\r\nimport { Button, Col, Container, Row } from \"reactstrap\";\r\nimport \"../../assets/scss/chat.scss\";\r\n\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { SlCallOut } from \"react-icons/sl\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport swal from \"sweetalert\";\r\nimport LiveChatAppMassage from \"./LiveChatAppMassage\";\r\n\r\nclass ChatApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.countRef = React.createRef();\r\n    this.apicall = React.createRef();\r\n    this.callmsg = React.createRef();\r\n\r\n    this.state = {\r\n      Index: \"\",\r\n      data: {},\r\n      sendbutton: \"\",\r\n      Activeastro: {},\r\n      CurrentRoomid: \"\",\r\n      roomChatData: [],\r\n      userId: \"\",\r\n      astroId: \"\",\r\n      msg: \"hello\",\r\n      roomId: \"\",\r\n    };\r\n  }\r\n\r\n  handleliveChat = () => {\r\n    setInterval(() => {\r\n      const astroId = localStorage.getItem(\"astroId\");\r\n      axiosConfig\r\n        .get(`/user/liveChat_byseller/1`)\r\n        // .get(`/user/liveChat_byseller/${astroId}`)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          this.setState({ roomChatData: res?.data.data });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }, 2000);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.handleliveChat();\r\n    console.log(this.props);\r\n    // const astroId = localStorage.getItem(\"astroId\");\r\n\r\n    // axiosConfig\r\n    //   .get(`/admin/getoneAstro/${astroId}`)\r\n    //   .then((res) => {\r\n    //     console.log(res.data.data);\r\n    //     this.setState({ Activeastro: res?.data?.data });\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n\r\n    // let user_id = JSON.parse(localStorage.getItem(\"user_id\"));\r\n  };\r\n\r\n  // handlechat = () => {\r\n  //   console.log(this.state.roomId);\r\n  //   axiosConfig\r\n  //     .get(`/user/allchatwithuser/${this.state.roomId}`)\r\n  //     .then((response) => {\r\n  //       console.log(response?.data?.data);\r\n  //       if (response.data.status === true) {\r\n  //         this.setState({ roomChatData: response?.data.data });\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     });\r\n  // };\r\n\r\n  // submitHandler = async (e, astroId, userId) => {\r\n  //   e.preventDefault();\r\n  //   let astroid = localStorage.getItem(\"astroId\");\r\n  //   let userid = localStorage.getItem(\"CurrentChat_userid\");\r\n  //   if (this.state.msg !== \"\") {\r\n  //     let obj = {\r\n  //       reciver: userid,\r\n  //       msg: this.state.msg,\r\n  //     };\r\n  //     let userIds = [userid];\r\n  //     await axiosConfig\r\n  //       .post(`/user/add_chatroom/${astroid}`, obj)\r\n  //       .then(async (response) => {\r\n  //         console.log(\"add chat room\", response.data.status);\r\n  //         if (response.data.status === true) {\r\n  //           this.setState({ msg: \"\" });\r\n  //           await axiosConfig\r\n  //             .get(`/user/allchatwithAstro/${astroid}`)\r\n  //             .then((response1) => {\r\n  //               console.log(response1?.data?.data);\r\n  //               if (response1.data.status === true) {\r\n  //                 let filteredArray = response1?.data?.data.filter(function (\r\n  //                   item\r\n  //                 ) {\r\n  //                   return (\r\n  //                     userIds.indexOf(item?.userid?._id || item?.reciver?._id) >\r\n  //                     -1\r\n  //                   );\r\n  //                 });\r\n  //                 this.setState({ roomChatData: filteredArray });\r\n  //               }\r\n  //             })\r\n  //             .catch((error) => {\r\n  //               console.log(error);\r\n  //             });\r\n  //         }\r\n  //       })\r\n\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //       });\r\n  //   } else swal(\"Alert\", \"Input field is blank. Add Some Value\");\r\n  // };\r\n\r\n  // handleChange = (e) => {\r\n  //   this.setState({\r\n  //     msg: e.target.value,\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <div class=\"app rt-chats\">\r\n          <div class=\"messages\">\r\n            <div className=\"chat-header\">\r\n              <p>\r\n                <span>\r\n                  <img\r\n                    // src={this.state.Activeastro?.img}\r\n                    className=\"app-img\"\r\n                    alt=\"image\"\r\n                  />\r\n                </span>\r\n                {/* {this.state.Activeastro?.fullname} */}\r\n              </p>\r\n            </div>\r\n            <div class=\"messages-history\">\r\n              <LiveChatAppMassage\r\n                roomChatData={\r\n                  this.state.roomChatData.length > 0\r\n                    ? this.state.roomChatData\r\n                    : []\r\n                }\r\n              />\r\n            </div>\r\n            {/* <form class=\"messages-inputs\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Send a message\"\r\n                onChange={(e) => {\r\n                  this.handleChange(e);\r\n                }}\r\n                value={this.state.msg}\r\n                defaultValue={\"\"}\r\n              />\r\n              <button\r\n                onClick={(e) =>\r\n                  this.submitHandler(e, this.state.astroId, this.state.userId)\r\n                }\r\n                // onClick={(e) =>\r\n                //   this.submitHandler(\r\n                //     e,\r\n                //     this.state.astroId,\r\n                //     this.state.userId\r\n                //   )\r\n                // }\r\n              >\r\n                <i class=\"material-icons\">send</i>\r\n              </button>\r\n            </form> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ChatApp;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport AgoraUIKit from \"agora-react-uikit\";\r\nimport LiveChat from \"./LiveChat\";\r\nimport \"./../../../assets/scss/video.scss\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction YourliveStream() {\r\n  const [videoCall, setVideoCall] = useState(false);\r\n  const [liveid, setliveId] = useState(\"\");\r\n  const [channelNamecreated, setchannelName] = useState(\"\");\r\n  const [Status, setStatus] = useState(\"\");\r\n  const [Token, setToken] = useState(\"\");\r\n  const [Addcall, setAddcall] = useState(false);\r\n  const [livestraming, setlivestraming] = useState(false);\r\n\r\n  const [view, setview] = useState(false);\r\n  const [listofchannel, setlistofchannel] = useState();\r\n  const param = useParams();\r\n  console.log(param.id);\r\n\r\n  const rtcProps = {\r\n    // Pass your App ID here.\r\n    appId: \"211ddf5d3ed341acaf8f7608e94b7c91\",\r\n    // appId: \"7d1f07c76f9d46be86bc46a791884023\",\r\n    // Set the channel name.\r\n    channel: channelNamecreated,\r\n    enableVideo: true,\r\n\r\n    token: (Token && Token) || localStorage.getItem(\"astrotokenforlivestream\"),\r\n\r\n    uid: 0,\r\n\r\n    role: \"host\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handlePopstate = () => {\r\n      window.history.pushState(null, null, window.location.pathname);\r\n    };\r\n\r\n    window.addEventListener(\"popstate\", handlePopstate);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"popstate\", handlePopstate);\r\n    };\r\n  }, []);\r\n\r\n  const callbacks = {\r\n    EndCall: () => {\r\n      setVideoCall(false);\r\n      const astroid = localStorage.getItem(\"astroId\");\r\n      axiosConfig\r\n        .get(`/user/disConnectLiveStream/${liveid}`)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setlivestraming(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n        });\r\n    },\r\n  };\r\n\r\n  const handlestatus = (e) => {\r\n    e.preventDefault();\r\n    debugger;\r\n    console.log(param.id);\r\n    const astroid = localStorage.getItem(\"astroId\");\r\n    const payload = {\r\n      // astroAccount: astroid,\r\n      astroAccount: \"1\",\r\n      // astroAccount: param.id,\r\n      status: true,\r\n    };\r\n\r\n    if (Status === \"Active\") {\r\n      axiosConfig\r\n        .post(`/user/astroLiveStreaming`, payload)\r\n        .then((res) => {\r\n          console.log(res.data?.data);\r\n          if (res.data.msg === \"already exists\") {\r\n            setToken(res.data?.token);\r\n            setliveId(res.data?._id);\r\n            localStorage.setItem(\"liveid\", res.data?._id);\r\n            setchannelName(res.data?.channelName);\r\n            setlivestraming(true);\r\n          }\r\n          if (res.data?.status) {\r\n            localStorage.setItem(\"liveid\", res.data?.data?._id);\r\n            setToken(res.data?.data?.token);\r\n            setchannelName(res.data?.data?.channelName);\r\n            setliveId(res.data?.data?._id);\r\n            setlivestraming(true);\r\n          }\r\n\r\n          localStorage.setItem(\r\n            \"astrotokenforlivestream\",\r\n            res.data?.data?.token\r\n          );\r\n          setVideoCall(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response?.data);\r\n        });\r\n    }\r\n    if (Status === \"Deactive\") {\r\n      localStorage.removeItem(\"astrotokenforlivestream\");\r\n    }\r\n  };\r\n\r\n  const handleofflinestreaming = () => {\r\n    const liveidnew = localStorage.getItem(\"liveid\");\r\n    console.log(liveidnew);\r\n    axiosConfig\r\n      // .get(`/user/disConnectLiveStream/${liveidnew}`)\r\n      .get(`/user/disConnectLiveStream/1`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        window.close();\r\n        // setlivestraming(false);\r\n        // localStorage.removeItem(\"liveid\");\r\n        // window.location.replace(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"videocallmain mt-2\">\r\n      <Card>\r\n        <Row className=\"mt-2\">\r\n          <Col lg=\"4\" md=\"4\" sm=\"4\">\r\n            <div className=\"container mt-2 mb-1\">\r\n              <Button onClick={(e) => handlestatus(e)} color=\"success\">\r\n                liveStreaming Now\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"container mt-1 mb-1\">\r\n              <Row>\r\n                {livestraming === false ? (\r\n                  <>\r\n                    <Col className=\"mt-1\">\r\n                      <FormGroup check>\r\n                        <Input\r\n                          value=\"Active\"\r\n                          onClick={(e) => {\r\n                            setStatus(e.target.value);\r\n                          }}\r\n                          name=\"radio1\"\r\n                          type=\"radio\"\r\n                        />{\" \"}\r\n                        <Label check>Online</Label>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </>\r\n                ) : null}\r\n\r\n                <Col className=\"mt-1\">\r\n                  <FormGroup check>\r\n                    <Input\r\n                      value=\"Deactive\"\r\n                      onClick={(e) => {\r\n                        setStatus(e.target.value);\r\n                        handleofflinestreaming();\r\n                      }}\r\n                      name=\"radio1\"\r\n                      type=\"radio\"\r\n                    />{\" \"}\r\n                    <Label check>Offline</Label>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className=\"mt-1 mb-1\">\r\n          {videoCall && Status === \"Active\" ? (\r\n            <>\r\n              <div className=\"container\">\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    width: \"100%\",\r\n                    height: \"80vh\",\r\n                    border: \"1px solid black\",\r\n                    borderRadius: \"8px\",\r\n                  }}\r\n                  className=\"maindivstream container mt-3 mb-3\"\r\n                >\r\n                  <div\r\n                    style={{\r\n                      marginLeft: \"-10px\",\r\n                      display: \"flex\",\r\n                      width: \"60vw\",\r\n                      height: \"80vh\",\r\n                      borderRadius: \"8px\",\r\n                    }}\r\n                    className=\"\"\r\n                  >\r\n                    <AgoraUIKit rtcProps={rtcProps} callbacks={callbacks} />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"30vw\",\r\n                      height: \"80vh\",\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      <LiveChat />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {Addcall === true ? (\r\n                <>\r\n                  <Button onClick={() => setVideoCall(true)} color=\"success\">\r\n                    liveStreams Now\r\n                  </Button>\r\n                </>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YourliveStream;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}