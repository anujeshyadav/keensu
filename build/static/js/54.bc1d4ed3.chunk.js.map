{"version":3,"sources":["assets/user.jpg","assets/img/profile/post-media/25.jpg","views/apps/astrochat/LiveChatAppMassage.js","views/apps/astrochat/LiveChat.js","views/apps/astrochat/YourliveStream.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["module","exports","ChatAppMassage","props","state","this","roomChatData","length","map","chat","index","key","className","class","Row","Col","lg","style","borderRadius","width","height","src","image","username","msg","reverse","React","Component","ChatApp","handleliveChat","id","sellerid","localStorage","setItem","setInterval","axiosConfig","get","then","res","setState","data","catch","err","console","log","componentDidMount","countRef","createRef","apicall","callmsg","Index","sendbutton","Activeastro","CurrentRoomid","userId","astroId","roomId","images","alt","LiveChatAppMassage","YourliveStream","useState","videoCall","setVideoCall","setliveId","channelNamecreated","setchannelName","Status","setStatus","Token","setToken","Addcall","livestraming","setlivestraming","param","useParams","rtcProps","appId","channel","enableVideo","token","getItem","uid","role","useEffect","handlePopstate","window","history","pushState","location","pathname","addEventListener","removeEventListener","callbacks","EndCall","delete","close","response","Card","md","sm","Button","onClick","e","preventDefault","payload","astroAccount","status","post","_id","channelName","removeItem","handlestatus","color","FormGroup","check","Input","value","target","name","type","Label","display","border","marginLeft","LiveChat","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","children","node","hidden","for","tag","tagPropType","cssModule","object","xs","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","mapToCssModules","classNames","classes","createElement","_extends","row","inline","disabled"],"mappings":"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","file":"static/js/54.bc1d4ed3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.c2ec8ddd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/25.e002b22a.jpg\";","import React from \"react\";\r\nimport \"../../../assets/scss/pages/astrochat.scss\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport image from \"../../../assets/user.jpg\";\r\n\r\nclass ChatAppMassage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    // debugger;\r\n    // console.log(\"props value\", this.props.roomChatData);\r\n    return (\r\n      <>\r\n        {this.props.roomChatData && this.props.roomChatData.length\r\n          ? this.props.roomChatData\r\n              .map((chat, index) => {\r\n                {\r\n                  /* console.log(chat); */\r\n                }\r\n                return (\r\n                  <>\r\n                    {/* {chat.type === \"user\" ? ( \r\n                      <div class=\"message me\">\r\n                        <div class=\"message-body\">{chat?.msg}</div>\r\n                      </div>\r\n                    ) : ( */}\r\n                    <>\r\n                      <div key={index} className=\"message\">\r\n                        <div class=\"message-body\">\r\n                          <Row>\r\n                            <Col lg=\"4\">\r\n                              <img\r\n                                style={{ borderRadius: \"50%\" }}\r\n                                width=\"40px\"\r\n                                height=\"40px\"\r\n                                src={image}\r\n                              />\r\n                            </Col>\r\n                            <Col lg=\"8\">\r\n                              <Row>\r\n                                <h6 className=\"container\">\r\n                                  <b>{chat?.username}</b>\r\n                                </h6>\r\n                              </Row>\r\n                              <Row>\r\n                                <h6 className=\"container\">{chat?.msg}</h6>\r\n                              </Row>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                    {/* )} */}\r\n                  </>\r\n                );\r\n              })\r\n              .reverse()\r\n          : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatAppMassage;\r\n","import React from \"react\";\r\nimport { Button, Col, Container, Row } from \"reactstrap\";\r\nimport \"../../assets/scss/chat.scss\";\r\n\r\nimport axiosConfig from \"../../../axiosConfig\";\r\n// import { SlCallOut } from \"react-icons/sl\";\r\n// import { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n// import swal from \"sweetalert\";\r\nimport LiveChatAppMassage from \"./LiveChatAppMassage\";\r\nimport images from \"../../../assets/img/profile/post-media/25.jpg\";\r\n\r\nclass ChatApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.countRef = React.createRef();\r\n    this.apicall = React.createRef();\r\n    this.callmsg = React.createRef();\r\n\r\n    this.state = {\r\n      roomChatData: [],\r\n      Index: \"\",\r\n      data: {},\r\n      sendbutton: \"\",\r\n      Activeastro: {},\r\n      CurrentRoomid: \"\",\r\n      userId: \"\",\r\n      astroId: \"\",\r\n      msg: \"hello\",\r\n      roomId: \"\",\r\n    };\r\n  }\r\n\r\n  handleliveChat = () => {\r\n    let id = this.props?.sellerid;\r\n\r\n    localStorage.setItem(\"sellerid\", id);\r\n    setInterval(() => {\r\n      axiosConfig\r\n        .get(`/user/liveChat_byseller/${id}`)\r\n        .then((res) => {\r\n          this.setState({ roomChatData: res.data?.data });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }, 2000);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    let id = this.props?.sellerid;\r\n\r\n    this.handleliveChat();\r\n    axiosConfig\r\n      .get(`/user/liveChat_byseller/${id}`)\r\n      .then((res) => {\r\n        console.log(res.data?.data);\r\n        this.setState({ roomChatData: res.data?.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // submitHandler = async (e, astroId, userId) => {\r\n  //   e.preventDefault();\r\n  //   let astroid = localStorage.getItem(\"astroId\");\r\n  //   let userid = localStorage.getItem(\"CurrentChat_userid\");\r\n  //   if (this.state.msg !== \"\") {\r\n  //     let obj = {\r\n  //       reciver: userid,\r\n  //       msg: this.state.msg,\r\n  //     };\r\n  //     let userIds = [userid];\r\n  //     await axiosConfig\r\n  //       .post(`/user/add_chatroom/${astroid}`, obj)\r\n  //       .then(async (response) => {\r\n  //         console.log(\"add chat room\", response.data.status);\r\n  //         if (response.data.status === true) {\r\n  //           this.setState({ msg: \"\" });\r\n  //           await axiosConfig\r\n  //             .get(`/user/allchatwithAstro/${astroid}`)\r\n  //             .then((response1) => {\r\n  //               console.log(response1?.data?.data);\r\n  //               if (response1.data.status === true) {\r\n  //                 let filteredArray = response1?.data?.data.filter(function (\r\n  //                   item\r\n  //                 ) {\r\n  //                   return (\r\n  //                     userIds.indexOf(item?.userid?._id || item?.reciver?._id) >\r\n  //                     -1\r\n  //                   );\r\n  //                 });\r\n  //                 this.setState({ roomChatData: filteredArray });\r\n  //               }\r\n  //             })\r\n  //             .catch((error) => {\r\n  //               console.log(error);\r\n  //             });\r\n  //         }\r\n  //       })\r\n\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //       });\r\n  //   } else swal(\"Alert\", \"Input field is blank. Add Some Value\");\r\n  // };\r\n\r\n  // handleChange = (e) => {\r\n  //   this.setState({\r\n  //     msg: e.target.value,\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <div class=\"app rt-chats\">\r\n          <div class=\"messages\">\r\n            <div className=\"chat-header\">\r\n              <p>\r\n                <span>\r\n                  <img src={images} className=\"app-img\" alt=\"image\" />\r\n                </span>\r\n                {/* {this.state.Activeastro?.fullname} */}\r\n              </p>\r\n            </div>\r\n            <div class=\"messages-history\">\r\n              <LiveChatAppMassage\r\n                roomChatData={\r\n                  this.state.roomChatData && this.state.roomChatData?.length > 0\r\n                    ? this.state.roomChatData\r\n                    : []\r\n                }\r\n              />\r\n            </div>\r\n            {/* <form class=\"messages-inputs\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Send a message\"\r\n                onChange={(e) => {\r\n                  this.handleChange(e);\r\n                }}\r\n                value={this.state.msg}\r\n                defaultValue={\"\"}\r\n              />\r\n              <button\r\n                onClick={(e) =>\r\n                  this.submitHandler(e, this.state.astroId, this.state.userId)\r\n                }\r\n                // onClick={(e) =>\r\n                //   this.submitHandler(\r\n                //     e,\r\n                //     this.state.astroId,\r\n                //     this.state.userId\r\n                //   )\r\n                // }\r\n              >\r\n                <i class=\"material-icons\">send</i>\r\n              </button>\r\n            </form> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ChatApp;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport AgoraUIKit from \"agora-react-uikit\";\r\nimport LiveChat from \"./LiveChat\";\r\nimport \"./../../../assets/scss/video.scss\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction YourliveStream() {\r\n  const [videoCall, setVideoCall] = useState(false);\r\n  const [liveid, setliveId] = useState(\"\");\r\n  const [channelNamecreated, setchannelName] = useState(\"\");\r\n  const [Status, setStatus] = useState(\"\");\r\n  const [Token, setToken] = useState(\"\");\r\n  const [Addcall, setAddcall] = useState(false);\r\n  const [livestraming, setlivestraming] = useState(false);\r\n\r\n  const [view, setview] = useState(false);\r\n  const [listofchannel, setlistofchannel] = useState();\r\n  const param = useParams();\r\n\r\n  const rtcProps = {\r\n    // Pass your App ID here.\r\n    appId: \"211ddf5d3ed341acaf8f7608e94b7c91\",\r\n    // appId: \"7d1f07c76f9d46be86bc46a791884023\",\r\n    // Set the channel name.\r\n    channel: channelNamecreated,\r\n    enableVideo: true,\r\n\r\n    token: (Token && Token) || localStorage.getItem(\"astrotokenforlivestream\"),\r\n\r\n    uid: 0,\r\n\r\n    role: \"host\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handlePopstate = () => {\r\n      window.history.pushState(null, null, window.location.pathname);\r\n    };\r\n\r\n    window.addEventListener(\"popstate\", handlePopstate);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"popstate\", handlePopstate);\r\n    };\r\n  }, []);\r\n\r\n  const callbacks = {\r\n    EndCall: () => {\r\n      axiosConfig\r\n        .delete(`/user/dltliveChat/${param.id}`)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          axiosConfig\r\n            .get(`/user/disConnectLiveStream/${param.id}`)\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              window.close();\r\n            })\r\n            .catch((err) => {\r\n              console.log(err.response);\r\n            });\r\n          // window.close();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n        });\r\n    },\r\n  };\r\n\r\n  const handlestatus = (e) => {\r\n    e.preventDefault();\r\n\r\n    const payload = {\r\n      astroAccount: param.id,\r\n      status: true,\r\n    };\r\n\r\n    if (Status === \"Active\") {\r\n      axiosConfig\r\n        .post(`/user/astroLiveStreaming`, payload)\r\n        .then((res) => {\r\n          console.log(res.data?.data);\r\n          if (res.data.msg === \"already exists\") {\r\n            setToken(res.data?.token);\r\n            setliveId(res.data?._id);\r\n            localStorage.setItem(\"liveid\", res.data?.id);\r\n            setchannelName(res.data?.channelName);\r\n            setlivestraming(true);\r\n          }\r\n          if (res.data?.status) {\r\n            localStorage.setItem(\"liveid\", res.data?.data?._id);\r\n            setToken(res.data?.data?.token);\r\n            setchannelName(res.data?.data?.channelName);\r\n            setliveId(res.data?.data?._id);\r\n            setlivestraming(true);\r\n          }\r\n\r\n          localStorage.setItem(\r\n            \"astrotokenforlivestream\",\r\n            res.data?.data?.token\r\n          );\r\n          setVideoCall(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response?.data);\r\n        });\r\n    }\r\n    if (Status === \"Deactive\") {\r\n      // debugger;\r\n      axiosConfig\r\n        .delete(`/user/dltliveChat/${param.id}`)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          window.close();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n        });\r\n      window.close();\r\n      localStorage.removeItem(\"astrotokenforlivestream\");\r\n    }\r\n  };\r\n\r\n  const handleofflinestreaming = () => {\r\n    // debugger;\r\n    // window.close();\r\n\r\n    axiosConfig\r\n      .delete(`/user/dltliveChat/${param.id}`)\r\n      .then((res) => {\r\n        // debugger;\r\n        console.log(res.data);\r\n        axiosConfig\r\n          .get(`/user/disConnectLiveStream/${param.id}`)\r\n          .then((res) => {\r\n            console.log(res.data);\r\n          })\r\n          .catch((err) => {\r\n            // debugger;\r\n            console.log(err.response);\r\n          });\r\n\r\n        window.close();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n    window.close();\r\n  };\r\n  return (\r\n    <div className=\"videocallmain mt-2\">\r\n      <Card>\r\n        <Row className=\"mt-2\">\r\n          <Col lg=\"4\" md=\"4\" sm=\"4\">\r\n            <div className=\"container mt-2 mb-1\">\r\n              <Button onClick={(e) => handlestatus(e)} color=\"success\">\r\n                Start Live\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"container mt-1 mb-1\">\r\n              <Row>\r\n                {livestraming === false ? (\r\n                  <>\r\n                    <Col className=\"mt-1\">\r\n                      <FormGroup check>\r\n                        <Input\r\n                          value=\"Active\"\r\n                          onClick={(e) => {\r\n                            setStatus(e.target.value);\r\n                          }}\r\n                          name=\"radio1\"\r\n                          type=\"radio\"\r\n                        />{\" \"}\r\n                        <Label check>Online</Label>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </>\r\n                ) : null}\r\n\r\n                <Col className=\"mt-1\">\r\n                  <FormGroup check>\r\n                    <Input\r\n                      value=\"Deactive\"\r\n                      onClick={(e) => {\r\n                        setStatus(e.target.value);\r\n                        handleofflinestreaming();\r\n                      }}\r\n                      name=\"radio1\"\r\n                      type=\"radio\"\r\n                    />{\" \"}\r\n                    <Label check>Offline</Label>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className=\"mt-1 mb-1\">\r\n          {videoCall && Status === \"Active\" ? (\r\n            <>\r\n              <div className=\"container\">\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    width: \"100%\",\r\n                    height: \"80vh\",\r\n                    border: \"1px solid black\",\r\n                    borderRadius: \"8px\",\r\n                  }}\r\n                  className=\"maindivstream container mt-3 mb-3\"\r\n                >\r\n                  <div\r\n                    style={{\r\n                      marginLeft: \"-10px\",\r\n                      display: \"flex\",\r\n                      width: \"60vw\",\r\n                      height: \"80vh\",\r\n                      borderRadius: \"8px\",\r\n                    }}\r\n                    className=\"\"\r\n                  >\r\n                    <AgoraUIKit rtcProps={rtcProps} callbacks={callbacks} />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"30vw\",\r\n                      height: \"80vh\",\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      <LiveChat sellerid={param.id} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {Addcall === true ? (\r\n                <>\r\n                  <Button onClick={() => setVideoCall(true)} color=\"success\">\r\n                    liveStreams Now\r\n                  </Button>\r\n                </>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YourliveStream;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}