{"version":3,"sources":["views/apps/astrochat/LiveChatAppMassage.js","views/apps/astrochat/LiveChat.js","views/apps/astrochat/YourliveStream.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["ChatAppMassage","props","state","console","log","this","roomChatData","length","map","chat","index","type","class","msg","className","Row","Col","lg","style","borderRadius","width","height","src","userid","userimg","fullname","reverse","React","Component","i","ChatApp","handleliveChat","setInterval","astroId","localStorage","getItem","axiosConfig","get","then","res","setState","data","catch","err","componentDidMount","Activeastro","JSON","parse","handlechat","roomId","response","status","error","submitHandler","e","astroid","userId","preventDefault","swal","handleChange","target","value","countRef","createRef","apicall","callmsg","Index","sendbutton","CurrentRoomid","img","alt","LiveChatAppMassage","YourliveStream","useState","videoCall","setVideoCall","liveid","setliveId","channelNamecreated","setchannelName","Status","setStatus","Token","setToken","Addcall","livestraming","setlivestraming","rtcProps","appId","channel","enableVideo","token","uid","role","useEffect","handlePopstate","window","history","pushState","location","pathname","addEventListener","removeEventListener","callbacks","EndCall","Card","md","sm","Button","onClick","payload","astroAccount","post","_id","setItem","channelName","message","removeItem","handlestatus","color","FormGroup","check","Input","name","Label","liveidnew","replace","handleofflinestreaming","display","border","marginLeft","LiveChat","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","children","node","hidden","for","tag","tagPropType","cssModule","object","xs","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","mapToCssModules","classNames","classes","createElement","_extends","row","inline","disabled"],"mappings":"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","file":"static/js/61.ca345d88.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../../assets/scss/pages/astrochat.scss\";\r\nimport { Col, Row } from \"reactstrap\";\r\n\r\nclass ChatAppMassage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    console.log(\"props value\", this.props.roomChatData);\r\n    return (\r\n      <>\r\n        {this.props.roomChatData.length\r\n          ? this.props.roomChatData\r\n              .map((chat, index) => {\r\n                return (\r\n                  <>\r\n                    {chat.type === \"user\" ? (\r\n                      <div class=\"message me\">\r\n                        <div class=\"message-body\">{chat.msg}</div>\r\n                      </div>\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"message\">\r\n                          <div class=\"message-body\">\r\n                            <Row>\r\n                              <Col lg=\"4\">\r\n                                <img\r\n                                  style={{ borderRadius: \"50%\" }}\r\n                                  width=\"40px\"\r\n                                  height=\"40px\"\r\n                                  src={chat?.userid?.userimg[0]}\r\n                                />\r\n                              </Col>\r\n                              <Col lg=\"8\">\r\n                                <Row>\r\n                                  <h6 className=\"container\">\r\n                                    <b> {chat?.userid?.fullname}</b>\r\n                                  </h6>\r\n                                </Row>\r\n                                <Row>\r\n                                  <h6 className=\"container\">{chat.msg}</h6>\r\n                                </Row>\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                );\r\n              })\r\n              .reverse()\r\n          : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatAppMassage;\r\n","import React from \"react\";\r\nimport { Button, Col, Container, Row } from \"reactstrap\";\r\nimport \"../../assets/scss/chat.scss\";\r\n\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { SlCallOut } from \"react-icons/sl\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport swal from \"sweetalert\";\r\nimport LiveChatAppMassage from \"./LiveChatAppMassage\";\r\n\r\nclass ChatApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.countRef = React.createRef();\r\n    this.apicall = React.createRef();\r\n    this.callmsg = React.createRef();\r\n\r\n    this.state = {\r\n      Index: \"\",\r\n      data: {},\r\n      sendbutton: \"\",\r\n      Activeastro: {},\r\n      CurrentRoomid: \"\",\r\n      roomChatData: [],\r\n      userId: \"\",\r\n      astroId: \"\",\r\n      msg: \"hello\",\r\n      roomId: \"\",\r\n    };\r\n  }\r\n\r\n  handleliveChat = () => {\r\n    setInterval(() => {\r\n      const astroId = localStorage.getItem(\"astroId\");\r\n      axiosConfig\r\n        .get(`/user/liveChat_msgbyastro/${astroId}`)\r\n        .then((res) => {\r\n          this.setState({ roomChatData: res?.data.data });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }, 2000);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.handleliveChat();\r\n    console.log(this.props);\r\n    const astroId = localStorage.getItem(\"astroId\");\r\n\r\n    axiosConfig\r\n      .get(`/admin/getoneAstro/${astroId}`)\r\n      .then((res) => {\r\n        console.log(res.data.data);\r\n        this.setState({ Activeastro: res?.data?.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    let user_id = JSON.parse(localStorage.getItem(\"user_id\"));\r\n  };\r\n\r\n  handlechat = () => {\r\n    console.log(this.state.roomId);\r\n    axiosConfig\r\n      .get(`/user/allchatwithuser/${this.state.roomId}`)\r\n      .then((response) => {\r\n        console.log(response?.data?.data);\r\n        if (response.data.status === true) {\r\n          this.setState({ roomChatData: response?.data.data });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  submitHandler = async (e, astroid, userId) => {\r\n    e.preventDefault();\r\n\r\n    const astroId = localStorage.getItem(\"astroId\");\r\n    let userid = JSON.parse(localStorage.getItem(\"user_id\"));\r\n\r\n    if (this.state.msg != \"\") {\r\n      let obj = {\r\n        astroid: astroId,\r\n        msg: this.state.msg,\r\n      };\r\n    } else swal(\"Input filed is blank\", \"Fill it before send\");\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      msg: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <div class=\"app rt-chats\">\r\n          <div class=\"messages\">\r\n            <div className=\"chat-header\">\r\n              <p>\r\n                <span>\r\n                  <img\r\n                    src={this.state.Activeastro?.img}\r\n                    className=\"app-img\"\r\n                    alt=\"\"\r\n                  />\r\n                </span>\r\n                {this.state.Activeastro?.fullname}\r\n              </p>\r\n            </div>\r\n            <div class=\"messages-history\">\r\n              <LiveChatAppMassage\r\n                roomChatData={\r\n                  this.state.roomChatData.length > 0\r\n                    ? this.state.roomChatData\r\n                    : []\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ChatApp;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport AgoraUIKit from \"agora-react-uikit\";\r\nimport LiveChat from \"./LiveChat\";\r\nimport \"./../../../assets/scss/video.scss\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\n\r\nfunction YourliveStream() {\r\n  const [videoCall, setVideoCall] = useState(false);\r\n  const [liveid, setliveId] = useState(\"\");\r\n  const [channelNamecreated, setchannelName] = useState(\"\");\r\n  const [Status, setStatus] = useState(\"\");\r\n  const [Token, setToken] = useState(\"\");\r\n  const [Addcall, setAddcall] = useState(false);\r\n  const [livestraming, setlivestraming] = useState(false);\r\n\r\n  const [view, setview] = useState(false);\r\n  const [listofchannel, setlistofchannel] = useState();\r\n\r\n  const rtcProps = {\r\n    // Pass your App ID here.\r\n    appId: \"7d1f07c76f9d46be86bc46a791884023\",\r\n    // Set the channel name.\r\n    channel: channelNamecreated,\r\n    enableVideo: true,\r\n\r\n    token: (Token && Token) || localStorage.getItem(\"astrotokenforlivestream\"),\r\n\r\n    uid: 0,\r\n\r\n    role: \"host\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handlePopstate = () => {\r\n      window.history.pushState(null, null, window.location.pathname);\r\n    };\r\n\r\n    window.addEventListener(\"popstate\", handlePopstate);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"popstate\", handlePopstate);\r\n    };\r\n  }, []);\r\n\r\n  const callbacks = {\r\n    EndCall: () => {\r\n      setVideoCall(false);\r\n      const astroid = localStorage.getItem(\"astroId\");\r\n      axiosConfig\r\n        .get(`/user/disConnectLiveStream/${liveid}`)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setlivestraming(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n        });\r\n    },\r\n  };\r\n\r\n  const handlestatus = (e) => {\r\n    e.preventDefault();\r\n    const astroid = localStorage.getItem(\"astroId\");\r\n    const payload = {\r\n      astroAccount: astroid,\r\n      status: true,\r\n    };\r\n\r\n    if (Status === \"Active\") {\r\n      axiosConfig\r\n        .post(`/user/astroLiveStreaming`, payload)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          if (res.data.msg === \"already exists\") {\r\n            setToken(res.data?.token);\r\n            setliveId(res.data?._id);\r\n            localStorage.setItem(\"liveid\", res.data?._id);\r\n            setchannelName(res.data?.channelName);\r\n            setlivestraming(true);\r\n          }\r\n          if (res.data?.message === \"success\") {\r\n            localStorage.setItem(\"liveid\", res.data?.data?._id);\r\n            setToken(res.data?.data?.token);\r\n            setchannelName(res.data?.data?.channelName);\r\n            setliveId(res.data?.data?._id);\r\n            setlivestraming(true);\r\n          }\r\n\r\n          localStorage.setItem(\r\n            \"astrotokenforlivestream\",\r\n            res.data?.data?.token\r\n          );\r\n          setVideoCall(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response?.data);\r\n        });\r\n    }\r\n    if (Status === \"Deactive\") {\r\n      localStorage.removeItem(\"astrotokenforlivestream\");\r\n    }\r\n  };\r\n\r\n  const handleofflinestreaming = () => {\r\n    const liveidnew = localStorage.getItem(\"liveid\");\r\n    console.log(liveidnew);\r\n    axiosConfig\r\n      .get(`/user/disConnectLiveStream/${liveidnew}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setlivestraming(false);\r\n        localStorage.removeItem(\"liveid\");\r\n        window.location.replace(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"videocallmain mt-2\">\r\n      <Card>\r\n        <Row>\r\n          <Col lg=\"4\" md=\"4\" sm=\"4\">\r\n            <div className=\"container mt-2 mb-1\">\r\n              <Button onClick={(e) => handlestatus(e)} color=\"success\">\r\n                liveStreaming Now\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"container mt-1 mb-1\">\r\n              <Row>\r\n                {livestraming === false ? (\r\n                  <>\r\n                    <Col className=\"mt-1\">\r\n                      <FormGroup check>\r\n                        <Input\r\n                          value=\"Active\"\r\n                          onClick={(e) => {\r\n                            setStatus(e.target.value);\r\n                          }}\r\n                          name=\"radio1\"\r\n                          type=\"radio\"\r\n                        />{\" \"}\r\n                        <Label check>Online</Label>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </>\r\n                ) : null}\r\n\r\n                <Col className=\"mt-1\">\r\n                  <FormGroup check>\r\n                    <Input\r\n                      value=\"Deactive\"\r\n                      onClick={(e) => {\r\n                        setStatus(e.target.value);\r\n                        handleofflinestreaming();\r\n                      }}\r\n                      name=\"radio1\"\r\n                      type=\"radio\"\r\n                    />{\" \"}\r\n                    <Label check>Offline</Label>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className=\"mt-1 mb-1\">\r\n          {videoCall && Status === \"Active\" ? (\r\n            <>\r\n              <div className=\"container\">\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    width: \"100%\",\r\n                    height: \"80vh\",\r\n                    border: \"1px solid black\",\r\n                    borderRadius: \"8px\",\r\n                  }}\r\n                  className=\"maindivstream container mt-3 mb-3\"\r\n                >\r\n                  <div\r\n                    style={{\r\n                      marginLeft: \"-10px\",\r\n                      display: \"flex\",\r\n                      width: \"60vw\",\r\n                      height: \"80vh\",\r\n                      borderRadius: \"8px\",\r\n                    }}\r\n                    className=\"\"\r\n                  >\r\n                    <AgoraUIKit rtcProps={rtcProps} callbacks={callbacks} />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"30vw\",\r\n                      height: \"80vh\",\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      <LiveChat />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {Addcall === true ? (\r\n                <>\r\n                  <Button onClick={() => setVideoCall(true)} color=\"success\">\r\n                    liveStreams Now\r\n                  </Button>\r\n                </>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YourliveStream;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}